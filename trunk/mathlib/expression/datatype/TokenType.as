package mathlib.expression.datatype {	public class TokenType {		public var desc:String;		public function TokenType(_desc:String):void { desc = _desc; }		public function toString():String { return desc; }				public static const LP:TokenType = new TokenType("(");		public static const RP:TokenType = new TokenType(")");		public static const COMMA:TokenType = new TokenType(",");		public static const ADDOP:TokenType = new TokenType("addition operator");		public static const MULOP:TokenType = new TokenType("multiplication operator");		public static const FN:TokenType = new TokenType("function");		public static const CONST:TokenType = new TokenType("constant");		public static const VAR:TokenType = new TokenType("variable");		public static const NUM:TokenType = new TokenType("number");		public static const NEGATE:TokenType = new TokenType("negate");		public static const POW:TokenType = new TokenType("exponentiation");	}}